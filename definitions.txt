* External properties
lambda     : average arrival rate
1/lambda   : average time between arrivals

* Properties of a server (independent of traffic)
S     : size of a job - how long does it take to process in absence of other jobs
E[S]  : expected service time
mu    : average service rate

* Properties of a system (server + traffic)
T     : response time
E[T]  : mean response time
T_q   : waiting/queuing time
N_q   : number of jobs in the queue
N     : number of jobs in the system
rho_i : Device utilization of device i (fraction of time busy)
X_i   : Throughput of device i (rate of completions)

* Closed-system specific
Z     : think time (time between receiving end of 1 job and starting a new one)
R     : response time (time it takes system to do the work)
T     : system time

* Probability
P{E v F} = P{E} + P{F} - P{E ^ F}
P{E | F} = P{E ^ F}/P{F}
independence: P{E ^ F} = P{E} * P{F}
conditional independence: P{E ^ F | G} = P{E | G} * P{F | G}
Bayes: P{F | E} = P{E | F} * P{F} / P{E}
E[X]   : expected value : sum of (p * X)
Var(X) : E[(X - (E[X]))^2]
C^2_x  : squared coefficient of variation = Var(X)/(E[X]^2)
positive correlation: P{A|B} > P{A}
covariance(X,Y) = E[(X-E[X])(Y-E[Y])]
* Distributions:
Bernoulli(p): X = {1 with P=p; 0 with P=1-p} (coinflip)
Binomial(n, p): n independent Bernoullis, X = {i where i is number of Bernoulli 1's}
                (n choose i) * p^i * (1-p)^(n-i)
Geometric(x): number of Bernoulli trials until a 1 is reached
              (1-p)^(i-1)*p
Poisson(lambda): p(i) = e^-lambda * lambda^i / i!
Uniform(a, b): p(x) = 1/(a - b) if a<=x<=b
Exp(lambda): p(x) = lambda * e^(-lambda*x)
Pareto(a): p(x) = a * x^(-a-1)  (a usually 0<=a<2)

Equations:
* Open-system
E[T] = E[Tq] + E[S] (response time = queuing time + compute time)

* Closed-system
E[T] = E[R] + E[Z]

mu = 1/E[S]
X_i = mu_i * rho_i (service_rate * utilization = throughput)
rho_i = X_i * E[S] (Utilization Law) (utilization = throughput * compute time)
